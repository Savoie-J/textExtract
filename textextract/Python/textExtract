from easyocr import Reader
import imageio
imageio.plugins.freeimage.download()
import tkinter as tk
from tkinter import filedialog as fd
from tkinter import *
from PIL import ImageTk, Image

reader_ja = Reader(['ja']) #initializes the download of the japanese OCR database.

def read_text(image_name, model_name, in_line=True):
  text = model_name.readtext(image_name, detail = 0, paragraph=in_line)
  return '\n'.join(text)

def filenameClick(): #upon click of the button, this function should do the following;
    filename = fd.askopenfilename() #open file dialog
    ja_text = read_text(filename, reader_ja) #initiate the read text function using the japanese text finder + file.
    scrapedLabel.configure(text = ja_text) #update the scraped label from blank to the scraped text.
    userPhoto = ImageTk.PhotoImage(Image.open(filename).resize((375,600))) #initiate a photo variable, displaying the file image. 

    label = Label(image=userPhoto) #line 20 & 21 were fixes from online, something about tkinter requiring references?
    label.image = userPhoto

    imageLabel.configure(image = userPhoto) #update the image label at the bottom from blank, to the image from the file.
    print(ja_text) # 秘 密は 絡み合い 他人は家 族に

window = tk.Tk() #creates the GUI window.
window.title("Text Extractor") #gives the GUI a title.
window.geometry("1000x750") #sets the bounds of the GUI.

filenameButton = tk.Button(window, text="Select a file to translate: ", command = filenameClick, height = 6, width = 30) #creates a button.
filenameButton.grid(row = 0, column = 0) #sets the button's location to the top left.

scrapedLabel = tk.Label(window, text = "", height = 10, width = 25, font='Times 18 bold') #creates a label for the scraped text, is blank initially.
scrapedLabel.grid(row = 1, column = 0) #sets the labels location just to the right of the button.

initPhoto = ImageTk.PhotoImage(Image.open("Blank_square.png").resize((100,100)))
imageLabel = tk.Label(window, text = ":3", image = initPhoto) #creates a label for the image.
imageLabel.place(relx=0.5, rely=0.5, anchor=CENTER) #sets the labels location to the center of the GUI.

window.mainloop()